# Rime schema settings
# encoding: utf-8

schema:
  schema_id: hepyf
  name: 小鶴音形繁體
  version: "1"
  dependencies:
    - hpdz

punctuator:
  full_shape:
    ' ' : { commit: '　' }
    ',' : { commit: ， }
    '.' : { commit: 。 }
    '<' : [ 《, 〈, «, ‹ ]
    '>' : [ 》, 〉, », › ]
    '/' : [ ／, ÷ ]
    '?' : { commit: ？ }
    ';' : { commit: ； }
    ':' : { commit: ： }
    '''' : { pair: [ '‘', '’' ] }
    '"' : { pair: [ '“', '”' ] }
    '\' : [ 、, ＼ ]
    '|' : [ ·, ｜, '§', '¦' ]
    '`' : ｀
    '~' : ～
    '!' : { commit: ！ }
    '@' : [ ＠, ☯ ]
    '#' : [ ＃, ⌘ ]
    '%' : [ ％, '°', '℃' ]
    '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
    '^' : { commit: …… }
    '&' : ＆
    '*' : [ ＊, ·, ・, ×, ※, ❂ ]
    '(' : （
    ')' : ）
    '-' : －
    '_' : ——
    '+' : ＋
    '=' : ＝
    '[' : [ 「, 【, 〔, ［ ]
    ']' : [ 」, 】, 〕, ］ ]
    '{' : [ 『, 〖, ｛ ]
    '}' : [ 』, 〗, ｝ ]
  half_shape:
    ',' : { commit: ， }
    '.' : { commit: 。 }
    '<' : [ 《, 〈, «, ‹ ]
    '>' : [ 》, 〉, », › ]
    '/' : { commit: 、 }
    '?' : { commit: ？ }
    ';' : { commit: ； }
    ':' : { commit: ： }
    '''' : { pair: [ '‘', '’' ] }
    '"' : { pair: [ '“', '”' ] }
    '\' : [ 、, '\', ＼ ]
    '|' : [ ·, '|', ｜, '§', '¦' ]
    '`' : '`'
    '~' : [ '~', ～ ]
    '!' : { commit: ！ }
    '@' : '@'
    '#' : '#'
    '%' : [ '%', ％, '°', '℃' ]
    '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
    '^' : { commit: …… }
    '&' : '&'
    '*' : [ '*', ＊, ·, ・, ×, ※, ❂ ]
    '(' : （
    ')' : ）
    '-' : '-'
    '_' : ——
    '+' : '+'
    '=' : '='
    '[' : [ 「, 【, 〔, ［ ]
    ']' : [ 」, 】, 〕,  ］ ]
    '{' : [ 『, 〖, ｛ ]
    '}' : [ 』, 〗, ｝ ]

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]



    
    
engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    #- table_translator@custom_phrase
    - table_translator
    - reverse_lookup_translator
  filters:
    - simplifier
    - uniquifier
    - simplifier

speller:
  alphabet: 'zyxwvutsrqponmlkjihgfedcba;'
  initials: 'abcdefghijklmnopqrstuvwxyz;'
  delimiter: " '"
  max_code_length: 4
  auto_select: true
  auto_select_pattern: ^;.$|^\w{4}$

translator:
  dictionary: hepyf
  enable_charset_filter: false
  disable_user_dict_for_patterns:
    - "^z.*$"
  enable_completion: false
  enable_sentence: false
  enable_user_dict: false


  
custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_sentence: false

reverse_lookup:
  dictionary: hpdz
  comment_format:
    - xform/^/〔/
    - xform/$/〕/
    - xform/ /, /

punctuator:
  import_preset: default

key_binder:
  bindings:
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - { when: has_menu, accept: ";", send: 2 }
    - { when: has_menu, accept: "'", send: 3 }
    - { when: composing, accept: "Tab", send: ; }
    - { when: has_menu, accept: "&", toggle: emoji_cn}
    - { when: has_menu, accept: "^", toggle: bmma}
   
recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "[a-z`]*`+[a-z`]*"
    punct: "^/([0-9]0?|[a-z]+)$"
	
